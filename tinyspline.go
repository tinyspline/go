/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /tinyspline/swig/tinysplinego.i

package tinyspline

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;



#cgo linux,386 LDFLAGS:    -L${SRCDIR} -L${SRCDIR}/linux-x86     -ltinysplinego -lm -lstdc++
#cgo linux,amd64 LDFLAGS:  -L${SRCDIR} -L${SRCDIR}/linux-x86_64  -ltinysplinego -lm -lstdc++
#cgo darwin,386 LDFLAGS:   -L${SRCDIR} -L${SRCDIR}/macosx-x86    -ltinysplinego -lm -lstdc++
#cgo darwin,amd64 LDFLAGS: -L${SRCDIR} -L${SRCDIR}/macosx-x86_64 -ltinysplinego -lm -lstdc++
#cgo windows,386,!stdcxxshared LDFLAGS:   -L${SRCDIR} -L${SRCDIR}/windows-x86    -ltinysplinego -Wl,-Bstatic -lstdc++
#cgo windows,amd64,!stdcxxshared LDFLAGS: -L${SRCDIR} -L${SRCDIR}/windows-x86_64 -ltinysplinego -Wl,-Bstatic -lstdc++
#cgo windows,386,stdcxxshared LDFLAGS:    -L${SRCDIR} -L${SRCDIR}/windows-x86    -ltinysplinego -lstdc++-6
#cgo windows,amd64,stdcxxshared LDFLAGS:  -L${SRCDIR} -L${SRCDIR}/windows-x86_64 -ltinysplinego -lstdc++-6

typedef _gostring_ swig_type_1;
typedef _goslice_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _goslice_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _goslice_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _goslice_ swig_type_11;
typedef _goslice_ swig_type_12;
typedef _goslice_ swig_type_13;
typedef _goslice_ swig_type_14;
typedef _goslice_ swig_type_15;
typedef _goslice_ swig_type_16;
typedef _goslice_ swig_type_17;
typedef _goslice_ swig_type_18;
typedef _goslice_ swig_type_19;
typedef _goslice_ swig_type_20;
typedef _goslice_ swig_type_21;
typedef _goslice_ swig_type_22;
typedef _goslice_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _goslice_ swig_type_26;
typedef _goslice_ swig_type_27;
typedef _goslice_ swig_type_28;
typedef _goslice_ swig_type_29;
typedef _goslice_ swig_type_30;
typedef _goslice_ swig_type_31;
typedef _goslice_ swig_type_32;
typedef _goslice_ swig_type_33;
typedef _gostring_ swig_type_34;
typedef _gostring_ swig_type_35;
typedef _gostring_ swig_type_36;
typedef _goslice_ swig_type_37;
typedef _goslice_ swig_type_38;
typedef _goslice_ swig_type_39;
typedef _goslice_ swig_type_40;
typedef _gostring_ swig_type_41;
extern void _wrap_Swig_free_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_tinyspline_beac5664a71e2f0d(swig_intgo arg1);
extern uintptr_t _wrap_new_Vec2__SWIG_0_tinyspline_beac5664a71e2f0d(void);
extern uintptr_t _wrap_new_Vec2__SWIG_1_tinyspline_beac5664a71e2f0d(double arg1, double arg2);
extern uintptr_t _wrap_Vec2_add_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec2_subtract_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec2_multiply_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_Vec2_normalize_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Vec2_norm_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Vec2_magnitude_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Vec2_dot_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Vec2_angle_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Vec2_distance_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_1 _wrap_Vec2_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec2_x_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec2_x_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec2_y_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec2_y_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_type_2 _wrap_Vec2_values_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_Vec2_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_Vec3__SWIG_0_tinyspline_beac5664a71e2f0d(void);
extern uintptr_t _wrap_new_Vec3__SWIG_1_tinyspline_beac5664a71e2f0d(double arg1, double arg2, double arg3);
extern uintptr_t _wrap_Vec3_add_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec3_subtract_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec3_multiply_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_Vec3_cross_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec3_normalize_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Vec3_norm_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Vec3_magnitude_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Vec3_dot_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Vec3_angle_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Vec3_distance_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_3 _wrap_Vec3_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec3_x_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec3_x_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec3_y_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec3_y_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec3_z_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec3_z_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_type_4 _wrap_Vec3_values_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_Vec3_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_Vec4__SWIG_0_tinyspline_beac5664a71e2f0d(void);
extern uintptr_t _wrap_new_Vec4__SWIG_1_tinyspline_beac5664a71e2f0d(double arg1, double arg2, double arg3, double arg4);
extern uintptr_t _wrap_Vec4_add_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec4_subtract_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Vec4_multiply_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_Vec4_normalize_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Vec4_norm_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Vec4_magnitude_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Vec4_dot_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Vec4_angle_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern double _wrap_Vec4_distance_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_5 _wrap_Vec4_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec4_x_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec4_x_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec4_y_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec4_y_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec4_z_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec4_z_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_Vec4_w_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern double _wrap_Vec4_w_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_type_6 _wrap_Vec4_values_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_Vec4_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_Frame_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern swig_type_7 _wrap_Frame_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Frame_position_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Frame_tangent_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Frame_normal_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Frame_binormal_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_Frame_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_FrameSeq__SWIG_0_tinyspline_beac5664a71e2f0d(void);
extern uintptr_t _wrap_new_FrameSeq__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_FrameSeq_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_FrameSeq_size_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_FrameSeq_at_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_8 _wrap_FrameSeq_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_Domain_tinyspline_beac5664a71e2f0d(double arg1, double arg2);
extern swig_type_9 _wrap_Domain_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Domain_min_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Domain_max_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_Domain_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_DeBoorNet_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_DeBoorNet_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_DeBoorNet_resultVec2__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_DeBoorNet_resultVec2__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_DeBoorNet_resultVec3__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_DeBoorNet_resultVec3__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_DeBoorNet_resultVec4__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_DeBoorNet_resultVec4__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_type_10 _wrap_DeBoorNet_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_DeBoorNet_knot_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_DeBoorNet_index_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_DeBoorNet_multiplicity_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_DeBoorNet_numInsertions_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_DeBoorNet_dimension_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_type_11 _wrap_DeBoorNet_points_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_type_12 _wrap_DeBoorNet_result_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_Opened_BSpline_tinyspline_beac5664a71e2f0d(void);
extern swig_intgo _wrap_Clamped_BSpline_tinyspline_beac5664a71e2f0d(void);
extern swig_intgo _wrap_Beziers_BSpline_tinyspline_beac5664a71e2f0d(void);
extern uintptr_t _wrap_new_BSpline__SWIG_0_tinyspline_beac5664a71e2f0d(void);
extern uintptr_t _wrap_new_BSpline__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_BSpline__SWIG_2_tinyspline_beac5664a71e2f0d(swig_intgo arg1, swig_intgo arg2, swig_intgo arg3, swig_intgo arg4);
extern uintptr_t _wrap_new_BSpline__SWIG_3_tinyspline_beac5664a71e2f0d(swig_intgo arg1, swig_intgo arg2, swig_intgo arg3);
extern uintptr_t _wrap_new_BSpline__SWIG_4_tinyspline_beac5664a71e2f0d(swig_intgo arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_BSpline__SWIG_5_tinyspline_beac5664a71e2f0d(swig_intgo arg1);
extern void _wrap_delete_BSpline_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_BSpline_interpolateCubicNatural_tinyspline_beac5664a71e2f0d(swig_type_13 arg1, swig_intgo arg2);
extern uintptr_t _wrap_BSpline_interpolateCatmullRom__SWIG_0_tinyspline_beac5664a71e2f0d(swig_type_14 arg1, swig_intgo arg2, double arg3, swig_type_15 arg4, swig_type_16 arg5, double arg6);
extern uintptr_t _wrap_BSpline_interpolateCatmullRom__SWIG_1_tinyspline_beac5664a71e2f0d(swig_type_17 arg1, swig_intgo arg2, double arg3, swig_type_18 arg4, swig_type_19 arg5);
extern uintptr_t _wrap_BSpline_interpolateCatmullRom__SWIG_2_tinyspline_beac5664a71e2f0d(swig_type_20 arg1, swig_intgo arg2, double arg3, swig_type_21 arg4);
extern uintptr_t _wrap_BSpline_interpolateCatmullRom__SWIG_3_tinyspline_beac5664a71e2f0d(swig_type_22 arg1, swig_intgo arg2, double arg3);
extern uintptr_t _wrap_BSpline_interpolateCatmullRom__SWIG_4_tinyspline_beac5664a71e2f0d(swig_type_23 arg1, swig_intgo arg2);
extern uintptr_t _wrap_BSpline_parseJson_tinyspline_beac5664a71e2f0d(swig_type_24 arg1);
extern uintptr_t _wrap_BSpline_load_tinyspline_beac5664a71e2f0d(swig_type_25 arg1);
extern _Bool _wrap_BSpline_knotsEqual_tinyspline_beac5664a71e2f0d(double arg1, double arg2);
extern uintptr_t _wrap_BSpline_controlPointVec2At_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_BSpline_controlPointVec3At_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_BSpline_controlPointVec4At_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern double _wrap_BSpline_knotAt_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_BSpline_eval_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern swig_type_26 _wrap_BSpline_evalAll_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_type_27 arg2);
extern swig_type_28 _wrap_BSpline_sample__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_29 _wrap_BSpline_sample__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_BSpline_bisect__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2, double arg3, _Bool arg4, swig_intgo arg5, _Bool arg6, swig_intgo arg7);
extern uintptr_t _wrap_BSpline_bisect__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2, double arg3, _Bool arg4, swig_intgo arg5, _Bool arg6);
extern uintptr_t _wrap_BSpline_bisect__SWIG_2_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2, double arg3, _Bool arg4, swig_intgo arg5);
extern uintptr_t _wrap_BSpline_bisect__SWIG_3_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2, double arg3, _Bool arg4);
extern uintptr_t _wrap_BSpline_bisect__SWIG_4_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2, double arg3);
extern uintptr_t _wrap_BSpline_bisect__SWIG_5_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern _Bool _wrap_BSpline_isClosed__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern _Bool _wrap_BSpline_isClosed__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_BSpline_computeRMF__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_type_30 arg2, uintptr_t arg3);
extern uintptr_t _wrap_BSpline_computeRMF__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_type_31 arg2);
extern swig_type_32 _wrap_BSpline_uniformKnotSeq__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern swig_type_33 _wrap_BSpline_uniformKnotSeq__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_type_34 _wrap_BSpline_toJson_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_BSpline_save_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_type_35 arg2);
extern void _wrap_BSpline_setControlPointVec2At_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_BSpline_setControlPointVec3At_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_BSpline_setControlPointVec4At_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_BSpline_setKnotAt_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2, double arg3);
extern uintptr_t _wrap_BSpline_insertKnot_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2, swig_intgo arg3);
extern uintptr_t _wrap_BSpline_split_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_BSpline_tension_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern uintptr_t _wrap_BSpline_toBeziers_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_BSpline_derive__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2, double arg3);
extern uintptr_t _wrap_BSpline_derive__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_BSpline_derive__SWIG_2_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_BSpline_elevateDegree__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2, double arg3);
extern uintptr_t _wrap_BSpline_elevateDegree__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_BSpline_alignWith__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, double arg4);
extern uintptr_t _wrap_BSpline_alignWith__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_BSpline_morphTo__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2, double arg3);
extern uintptr_t _wrap_BSpline_morphTo__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern swig_type_36 _wrap_BSpline_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_BSpline_degree_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_BSpline_order_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_BSpline_dimension_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern swig_intgo _wrap_BSpline_numControlPoints_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_BSpline_domain_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_BSpline_controlPoints_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_type_37 arg2);
extern swig_type_38 _wrap_BSpline_controlPoints_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_BSpline_knots_set_tinyspline_beac5664a71e2f0d(uintptr_t arg1, swig_type_39 arg2);
extern swig_type_40 _wrap_BSpline_knots_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_new_Morphism__SWIG_0_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2, double arg3);
extern uintptr_t _wrap_new_Morphism__SWIG_1_tinyspline_beac5664a71e2f0d(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Morphism_eval_tinyspline_beac5664a71e2f0d(uintptr_t arg1, double arg2);
extern swig_type_41 _wrap_Morphism_string_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Morphism_origin_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern uintptr_t _wrap_Morphism_target_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern double _wrap_Morphism_epsilon_get_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
extern void _wrap_delete_Morphism_tinyspline_beac5664a71e2f0d(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


type _ sync.Mutex


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_tinyspline_beac5664a71e2f0d(C.swig_intgo(_swig_i_0)))
	return swig_r
}

const TS_PI float64 = 3.14159265358979323846
const TS_MAX_NUM_KNOTS int = 10000
const TS_DOMAIN_DEFAULT_MIN float64 = 0.0
const TS_DOMAIN_DEFAULT_MAX float64 = 1.0
const TS_KNOT_EPSILON float64 = 1e-4
const TS_POINT_EPSILON float64 = 1e-5
const TS_LENGTH_ZERO float64 = 1e-4
type SwigcptrVec2 uintptr

func (p SwigcptrVec2) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVec2) SwigIsVec2() {
}

func NewVec2__SWIG_0() (_swig_ret Vec2) {
	var swig_r Vec2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_new_Vec2__SWIG_0_tinyspline_beac5664a71e2f0d()))
	return swig_r
}

func NewVec2__SWIG_1(arg1 float64, arg2 float64) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_new_Vec2__SWIG_1_tinyspline_beac5664a71e2f0d(C.double(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func NewVec2(a ...interface{}) Vec2 {
	argc := len(a)
	if argc == 0 {
		return NewVec2__SWIG_0()
	}
	if argc == 2 {
		return NewVec2__SWIG_1(a[0].(float64), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVec2) Add(arg2 Vec2) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Vec2_add_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec2) Subtract(arg2 Vec2) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Vec2_subtract_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec2) Multiply(arg2 float64) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Vec2_multiply_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec2) Normalize() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Vec2_normalize_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec2) Norm() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_Vec2_norm_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec2) Magnitude() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec2_magnitude_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec2) Dot(arg2 Vec2) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec2_dot_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec2) Angle(arg2 Vec2) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec2_angle_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec2) Distance(arg2 Vec2) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec2_distance_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec2) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Vec2_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrVec2) SetX(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec2_x_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec2) GetX() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec2_x_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec2) SetY(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec2_y_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec2) GetY() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec2_y_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec2) GetValues() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Vec2_values_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func DeleteVec2(arg1 Vec2) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vec2_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

type Vec2 interface {
	Swigcptr() uintptr
	SwigIsVec2()
	Add(arg2 Vec2) (_swig_ret Vec2)
	Subtract(arg2 Vec2) (_swig_ret Vec2)
	Multiply(arg2 float64) (_swig_ret Vec2)
	Normalize() (_swig_ret Vec2)
	Norm() (_swig_ret Vec2)
	Magnitude() (_swig_ret float64)
	Dot(arg2 Vec2) (_swig_ret float64)
	Angle(arg2 Vec2) (_swig_ret float64)
	Distance(arg2 Vec2) (_swig_ret float64)
	String() (_swig_ret string)
	SetX(arg2 float64)
	GetX() (_swig_ret float64)
	SetY(arg2 float64)
	GetY() (_swig_ret float64)
	GetValues() (_swig_ret []float64)
}

type SwigcptrVec3 uintptr

func (p SwigcptrVec3) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVec3) SwigIsVec3() {
}

func NewVec3__SWIG_0() (_swig_ret Vec3) {
	var swig_r Vec3
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_new_Vec3__SWIG_0_tinyspline_beac5664a71e2f0d()))
	return swig_r
}

func NewVec3__SWIG_1(arg1 float64, arg2 float64, arg3 float64) (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_new_Vec3__SWIG_1_tinyspline_beac5664a71e2f0d(C.double(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func NewVec3(a ...interface{}) Vec3 {
	argc := len(a)
	if argc == 0 {
		return NewVec3__SWIG_0()
	}
	if argc == 3 {
		return NewVec3__SWIG_1(a[0].(float64), a[1].(float64), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVec3) Add(arg2 Vec3) (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Vec3_add_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3) Subtract(arg2 Vec3) (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Vec3_subtract_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3) Multiply(arg2 float64) (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Vec3_multiply_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3) Cross(arg2 Vec3) (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Vec3_cross_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec3) Normalize() (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Vec3_normalize_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec3) Norm() (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Vec3_norm_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec3) Magnitude() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3_magnitude_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3) Dot(arg2 Vec3) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec3_dot_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec3) Angle(arg2 Vec3) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec3_angle_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec3) Distance(arg2 Vec3) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec3_distance_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec3) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Vec3_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrVec3) SetX(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec3_x_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec3) GetX() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3_x_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3) SetY(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec3_y_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec3) GetY() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3_y_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3) SetZ(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec3_z_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec3) GetZ() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec3_z_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec3) GetValues() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Vec3_values_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func DeleteVec3(arg1 Vec3) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vec3_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

type Vec3 interface {
	Swigcptr() uintptr
	SwigIsVec3()
	Add(arg2 Vec3) (_swig_ret Vec3)
	Subtract(arg2 Vec3) (_swig_ret Vec3)
	Multiply(arg2 float64) (_swig_ret Vec3)
	Cross(arg2 Vec3) (_swig_ret Vec3)
	Normalize() (_swig_ret Vec3)
	Norm() (_swig_ret Vec3)
	Magnitude() (_swig_ret float64)
	Dot(arg2 Vec3) (_swig_ret float64)
	Angle(arg2 Vec3) (_swig_ret float64)
	Distance(arg2 Vec3) (_swig_ret float64)
	String() (_swig_ret string)
	SetX(arg2 float64)
	GetX() (_swig_ret float64)
	SetY(arg2 float64)
	GetY() (_swig_ret float64)
	SetZ(arg2 float64)
	GetZ() (_swig_ret float64)
	GetValues() (_swig_ret []float64)
}

type SwigcptrVec4 uintptr

func (p SwigcptrVec4) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVec4) SwigIsVec4() {
}

func NewVec4__SWIG_0() (_swig_ret Vec4) {
	var swig_r Vec4
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_new_Vec4__SWIG_0_tinyspline_beac5664a71e2f0d()))
	return swig_r
}

func NewVec4__SWIG_1(arg1 float64, arg2 float64, arg3 float64, arg4 float64) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_new_Vec4__SWIG_1_tinyspline_beac5664a71e2f0d(C.double(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C.double(_swig_i_3))))
	return swig_r
}

func NewVec4(a ...interface{}) Vec4 {
	argc := len(a)
	if argc == 0 {
		return NewVec4__SWIG_0()
	}
	if argc == 4 {
		return NewVec4__SWIG_1(a[0].(float64), a[1].(float64), a[2].(float64), a[3].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVec4) Add(arg2 Vec4) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Vec4_add_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec4) Subtract(arg2 Vec4) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Vec4_subtract_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec4) Multiply(arg2 float64) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Vec4_multiply_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVec4) Normalize() (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Vec4_normalize_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec4) Norm() (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_Vec4_norm_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrVec4) Magnitude() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec4_magnitude_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) Dot(arg2 Vec4) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec4_dot_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec4) Angle(arg2 Vec4) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec4_angle_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec4) Distance(arg2 Vec4) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (float64)(C._wrap_Vec4_distance_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrVec4) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Vec4_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrVec4) SetX(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_x_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetX() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec4_x_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) SetY(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_y_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetY() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec4_y_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) SetZ(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_z_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetZ() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec4_z_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) SetW(arg2 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Vec4_w_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))
}

func (arg1 SwigcptrVec4) GetW() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Vec4_w_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVec4) GetValues() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Vec4_values_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func DeleteVec4(arg1 Vec4) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Vec4_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

type Vec4 interface {
	Swigcptr() uintptr
	SwigIsVec4()
	Add(arg2 Vec4) (_swig_ret Vec4)
	Subtract(arg2 Vec4) (_swig_ret Vec4)
	Multiply(arg2 float64) (_swig_ret Vec4)
	Normalize() (_swig_ret Vec4)
	Norm() (_swig_ret Vec4)
	Magnitude() (_swig_ret float64)
	Dot(arg2 Vec4) (_swig_ret float64)
	Angle(arg2 Vec4) (_swig_ret float64)
	Distance(arg2 Vec4) (_swig_ret float64)
	String() (_swig_ret string)
	SetX(arg2 float64)
	GetX() (_swig_ret float64)
	SetY(arg2 float64)
	GetY() (_swig_ret float64)
	SetZ(arg2 float64)
	GetZ() (_swig_ret float64)
	SetW(arg2 float64)
	GetW() (_swig_ret float64)
	GetValues() (_swig_ret []float64)
}

type SwigcptrFrame uintptr

func (p SwigcptrFrame) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFrame) SwigIsFrame() {
}

func NewFrame(arg1 Vec3, arg2 Vec3, arg3 Vec3, arg4 Vec3) (_swig_ret Frame) {
	var swig_r Frame
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4.Swigcptr()
	swig_r = (Frame)(SwigcptrFrame(C._wrap_new_Frame_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrFrame) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Frame_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrFrame) GetPosition() (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Frame_position_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrFrame) GetTangent() (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Frame_tangent_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrFrame) GetNormal() (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Frame_normal_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrFrame) GetBinormal() (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_Frame_binormal_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteFrame(arg1 Frame) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Frame_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

type Frame interface {
	Swigcptr() uintptr
	SwigIsFrame()
	String() (_swig_ret string)
	GetPosition() (_swig_ret Vec3)
	GetTangent() (_swig_ret Vec3)
	GetNormal() (_swig_ret Vec3)
	GetBinormal() (_swig_ret Vec3)
}

type SwigcptrFrameSeq uintptr

func (p SwigcptrFrameSeq) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFrameSeq) SwigIsFrameSeq() {
}

func NewFrameSeq__SWIG_0() (_swig_ret FrameSeq) {
	var swig_r FrameSeq
	swig_r = (FrameSeq)(SwigcptrFrameSeq(C._wrap_new_FrameSeq__SWIG_0_tinyspline_beac5664a71e2f0d()))
	return swig_r
}

func NewFrameSeq__SWIG_1(arg1 FrameSeq) (_swig_ret FrameSeq) {
	var swig_r FrameSeq
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (FrameSeq)(SwigcptrFrameSeq(C._wrap_new_FrameSeq__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewFrameSeq(a ...interface{}) FrameSeq {
	argc := len(a)
	if argc == 0 {
		return NewFrameSeq__SWIG_0()
	}
	if argc == 1 {
		return NewFrameSeq__SWIG_1(a[0].(FrameSeq))
	}
	panic("No match for overloaded function call")
}

func DeleteFrameSeq(arg1 FrameSeq) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_FrameSeq_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrFrameSeq) Size() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_FrameSeq_size_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrFrameSeq) At(arg2 int) (_swig_ret Frame) {
	var swig_r Frame
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Frame)(SwigcptrFrame(C._wrap_FrameSeq_at_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrFrameSeq) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_FrameSeq_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type FrameSeq interface {
	Swigcptr() uintptr
	SwigIsFrameSeq()
	Size() (_swig_ret int)
	At(arg2 int) (_swig_ret Frame)
	String() (_swig_ret string)
}

type SwigcptrDomain uintptr

func (p SwigcptrDomain) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDomain) SwigIsDomain() {
}

func NewDomain(arg1 float64, arg2 float64) (_swig_ret Domain) {
	var swig_r Domain
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Domain)(SwigcptrDomain(C._wrap_new_Domain_tinyspline_beac5664a71e2f0d(C.double(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDomain) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Domain_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDomain) GetMin() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Domain_min_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDomain) GetMax() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Domain_max_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteDomain(arg1 Domain) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Domain_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

type Domain interface {
	Swigcptr() uintptr
	SwigIsDomain()
	String() (_swig_ret string)
	GetMin() (_swig_ret float64)
	GetMax() (_swig_ret float64)
}

type SwigcptrDeBoorNet uintptr

func (p SwigcptrDeBoorNet) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrDeBoorNet) SwigIsDeBoorNet() {
}

func NewDeBoorNet(arg1 DeBoorNet) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_new_DeBoorNet_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteDeBoorNet(arg1 DeBoorNet) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_DeBoorNet_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrDeBoorNet) ResultVec2__SWIG_0(arg2 int) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DeBoorNet_resultVec2__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) ResultVec2__SWIG_1() (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_DeBoorNet_resultVec2__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDeBoorNet) ResultVec2(a ...interface{}) Vec2 {
	argc := len(a)
	if argc == 0 {
		return p.ResultVec2__SWIG_1()
	}
	if argc == 1 {
		return p.ResultVec2__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDeBoorNet) ResultVec3__SWIG_0(arg2 int) (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_DeBoorNet_resultVec3__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) ResultVec3__SWIG_1() (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_DeBoorNet_resultVec3__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDeBoorNet) ResultVec3(a ...interface{}) Vec3 {
	argc := len(a)
	if argc == 0 {
		return p.ResultVec3__SWIG_1()
	}
	if argc == 1 {
		return p.ResultVec3__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDeBoorNet) ResultVec4__SWIG_0(arg2 int) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_DeBoorNet_resultVec4__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) ResultVec4__SWIG_1() (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_DeBoorNet_resultVec4__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrDeBoorNet) ResultVec4(a ...interface{}) Vec4 {
	argc := len(a)
	if argc == 0 {
		return p.ResultVec4__SWIG_1()
	}
	if argc == 1 {
		return p.ResultVec4__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrDeBoorNet) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DeBoorNet_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrDeBoorNet) GetKnot() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_DeBoorNet_knot_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) GetIndex() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DeBoorNet_index_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) GetMultiplicity() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DeBoorNet_multiplicity_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) GetNumInsertions() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DeBoorNet_numInsertions_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) GetDimension() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_DeBoorNet_dimension_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) GetPoints() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DeBoorNet_points_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrDeBoorNet) GetResult() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_DeBoorNet_result_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

type DeBoorNet interface {
	Swigcptr() uintptr
	SwigIsDeBoorNet()
	ResultVec2(a ...interface{}) Vec2
	ResultVec3(a ...interface{}) Vec3
	ResultVec4(a ...interface{}) Vec4
	String() (_swig_ret string)
	GetKnot() (_swig_ret float64)
	GetIndex() (_swig_ret int)
	GetMultiplicity() (_swig_ret int)
	GetNumInsertions() (_swig_ret int)
	GetDimension() (_swig_ret int)
	GetPoints() (_swig_ret []float64)
	GetResult() (_swig_ret []float64)
}

type SwigcptrBSpline uintptr

func (p SwigcptrBSpline) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrBSpline) SwigIsBSpline() {
}

type TinysplineBSplineType int
func _swig_getBSpline_Opened_BSpline() (_swig_ret TinysplineBSplineType) {
	var swig_r TinysplineBSplineType
	swig_r = (TinysplineBSplineType)(C._wrap_Opened_BSpline_tinyspline_beac5664a71e2f0d())
	return swig_r
}

var BSplineOpened TinysplineBSplineType = _swig_getBSpline_Opened_BSpline()
func _swig_getBSpline_Clamped_BSpline() (_swig_ret TinysplineBSplineType) {
	var swig_r TinysplineBSplineType
	swig_r = (TinysplineBSplineType)(C._wrap_Clamped_BSpline_tinyspline_beac5664a71e2f0d())
	return swig_r
}

var BSplineClamped TinysplineBSplineType = _swig_getBSpline_Clamped_BSpline()
func _swig_getBSpline_Beziers_BSpline() (_swig_ret TinysplineBSplineType) {
	var swig_r TinysplineBSplineType
	swig_r = (TinysplineBSplineType)(C._wrap_Beziers_BSpline_tinyspline_beac5664a71e2f0d())
	return swig_r
}

var BSplineBeziers TinysplineBSplineType = _swig_getBSpline_Beziers_BSpline()
func NewBSpline__SWIG_0() (_swig_ret BSpline) {
	var swig_r BSpline
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_new_BSpline__SWIG_0_tinyspline_beac5664a71e2f0d()))
	return swig_r
}

func NewBSpline__SWIG_1(arg1 BSpline) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_new_BSpline__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewBSpline__SWIG_2(arg1 int, arg2 int, arg3 int, arg4 TinysplineBSplineType) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_new_BSpline__SWIG_2_tinyspline_beac5664a71e2f0d(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C.swig_intgo(_swig_i_3))))
	return swig_r
}

func NewBSpline__SWIG_3(arg1 int, arg2 int, arg3 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_new_BSpline__SWIG_3_tinyspline_beac5664a71e2f0d(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func NewBSpline__SWIG_4(arg1 int, arg2 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_new_BSpline__SWIG_4_tinyspline_beac5664a71e2f0d(C.swig_intgo(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func NewBSpline__SWIG_5(arg1 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_new_BSpline__SWIG_5_tinyspline_beac5664a71e2f0d(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewBSpline(a ...interface{}) BSpline {
	argc := len(a)
	if argc == 0 {
		return NewBSpline__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(SwigcptrBSpline); !ok {
			goto check_2
		}
		return NewBSpline__SWIG_1(a[0].(BSpline))
	}
check_2:
	if argc == 1 {
		return NewBSpline__SWIG_5(a[0].(int))
	}
	if argc == 2 {
		return NewBSpline__SWIG_4(a[0].(int), a[1].(int))
	}
	if argc == 3 {
		return NewBSpline__SWIG_3(a[0].(int), a[1].(int), a[2].(int))
	}
	if argc == 4 {
		return NewBSpline__SWIG_2(a[0].(int), a[1].(int), a[2].(int), a[3].(TinysplineBSplineType))
	}
	panic("No match for overloaded function call")
}

func DeleteBSpline(arg1 BSpline) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_BSpline_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

func BSplineInterpolateCubicNatural(arg1 []float64, arg2 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_interpolateCubicNatural_tinyspline_beac5664a71e2f0d(*(*C.swig_type_13)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BSplineInterpolateCatmullRom__SWIG_0(arg1 []float64, arg2 int, arg3 float64, arg4 []float64, arg5 []float64, arg6 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_interpolateCatmullRom__SWIG_0_tinyspline_beac5664a71e2f0d(*(*C.swig_type_14)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_15)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_16)(unsafe.Pointer(&_swig_i_4)), C.double(_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func BSplineInterpolateCatmullRom__SWIG_1(arg1 []float64, arg2 int, arg3 float64, arg4 []float64, arg5 []float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_interpolateCatmullRom__SWIG_1_tinyspline_beac5664a71e2f0d(*(*C.swig_type_17)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_18)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func BSplineInterpolateCatmullRom__SWIG_2(arg1 []float64, arg2 int, arg3 float64, arg4 []float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_interpolateCatmullRom__SWIG_2_tinyspline_beac5664a71e2f0d(*(*C.swig_type_20)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.double(_swig_i_2), *(*C.swig_type_21)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func BSplineInterpolateCatmullRom__SWIG_3(arg1 []float64, arg2 int, arg3 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_interpolateCatmullRom__SWIG_3_tinyspline_beac5664a71e2f0d(*(*C.swig_type_22)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BSplineInterpolateCatmullRom__SWIG_4(arg1 []float64, arg2 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_interpolateCatmullRom__SWIG_4_tinyspline_beac5664a71e2f0d(*(*C.swig_type_23)(unsafe.Pointer(&_swig_i_0)), C.swig_intgo(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BSplineInterpolateCatmullRom(a ...interface{}) BSpline {
	argc := len(a)
	if argc == 2 {
		return BSplineInterpolateCatmullRom__SWIG_4(a[0].([]float64), a[1].(int))
	}
	if argc == 3 {
		return BSplineInterpolateCatmullRom__SWIG_3(a[0].([]float64), a[1].(int), a[2].(float64))
	}
	if argc == 4 {
		return BSplineInterpolateCatmullRom__SWIG_2(a[0].([]float64), a[1].(int), a[2].(float64), a[3].([]float64))
	}
	if argc == 5 {
		return BSplineInterpolateCatmullRom__SWIG_1(a[0].([]float64), a[1].(int), a[2].(float64), a[3].([]float64), a[4].([]float64))
	}
	if argc == 6 {
		return BSplineInterpolateCatmullRom__SWIG_0(a[0].([]float64), a[1].(int), a[2].(float64), a[3].([]float64), a[4].([]float64), a[5].(float64))
	}
	panic("No match for overloaded function call")
}

func BSplineParseJson(arg1 string) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_parseJson_tinyspline_beac5664a71e2f0d(*(*C.swig_type_24)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BSplineLoad(arg1 string) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_load_tinyspline_beac5664a71e2f0d(*(*C.swig_type_25)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func BSplineKnotsEqual(arg1 float64, arg2 float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BSpline_knotsEqual_tinyspline_beac5664a71e2f0d(C.double(_swig_i_0), C.double(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrBSpline) ControlPointVec2At(arg2 int) (_swig_ret Vec2) {
	var swig_r Vec2
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec2)(SwigcptrVec2(C._wrap_BSpline_controlPointVec2At_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBSpline) ControlPointVec3At(arg2 int) (_swig_ret Vec3) {
	var swig_r Vec3
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec3)(SwigcptrVec3(C._wrap_BSpline_controlPointVec3At_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBSpline) ControlPointVec4At(arg2 int) (_swig_ret Vec4) {
	var swig_r Vec4
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Vec4)(SwigcptrVec4(C._wrap_BSpline_controlPointVec4At_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBSpline) KnotAt(arg2 int) (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (float64)(C._wrap_BSpline_knotAt_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrBSpline) Eval(arg2 float64) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_BSpline_eval_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBSpline) EvalAll(arg2 []float64) (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_BSpline_evalAll_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), *(*C.swig_type_27)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrBSpline) Sample__SWIG_0(arg2 int) (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_BSpline_sample__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrBSpline) Sample__SWIG_1() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BSpline_sample__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (p SwigcptrBSpline) Sample(a ...interface{}) []float64 {
	argc := len(a)
	if argc == 0 {
		return p.Sample__SWIG_1()
	}
	if argc == 1 {
		return p.Sample__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) Bisect__SWIG_0(arg2 float64, arg3 float64, arg4 bool, arg5 int, arg6 bool, arg7 int) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_BSpline_bisect__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C._Bool(_swig_i_3), C.swig_intgo(_swig_i_4), C._Bool(_swig_i_5), C.swig_intgo(_swig_i_6))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Bisect__SWIG_1(arg2 float64, arg3 float64, arg4 bool, arg5 int, arg6 bool) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_BSpline_bisect__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C._Bool(_swig_i_3), C.swig_intgo(_swig_i_4), C._Bool(_swig_i_5))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Bisect__SWIG_2(arg2 float64, arg3 float64, arg4 bool, arg5 int) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_BSpline_bisect__SWIG_2_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C._Bool(_swig_i_3), C.swig_intgo(_swig_i_4))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Bisect__SWIG_3(arg2 float64, arg3 float64, arg4 bool) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_BSpline_bisect__SWIG_3_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2), C._Bool(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Bisect__SWIG_4(arg2 float64, arg3 float64) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_BSpline_bisect__SWIG_4_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Bisect__SWIG_5(arg2 float64) (_swig_ret DeBoorNet) {
	var swig_r DeBoorNet
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (DeBoorNet)(SwigcptrDeBoorNet(C._wrap_BSpline_bisect__SWIG_5_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (p SwigcptrBSpline) Bisect(a ...interface{}) DeBoorNet {
	argc := len(a)
	if argc == 1 {
		return p.Bisect__SWIG_5(a[0].(float64))
	}
	if argc == 2 {
		return p.Bisect__SWIG_4(a[0].(float64), a[1].(float64))
	}
	if argc == 3 {
		return p.Bisect__SWIG_3(a[0].(float64), a[1].(float64), a[2].(bool))
	}
	if argc == 4 {
		return p.Bisect__SWIG_2(a[0].(float64), a[1].(float64), a[2].(bool), a[3].(int))
	}
	if argc == 5 {
		return p.Bisect__SWIG_1(a[0].(float64), a[1].(float64), a[2].(bool), a[3].(int), a[4].(bool))
	}
	if argc == 6 {
		return p.Bisect__SWIG_0(a[0].(float64), a[1].(float64), a[2].(bool), a[3].(int), a[4].(bool), a[5].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) IsClosed__SWIG_0(arg2 float64) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_BSpline_isClosed__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1)))
	return swig_r
}

func (arg1 SwigcptrBSpline) IsClosed__SWIG_1() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_BSpline_isClosed__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (p SwigcptrBSpline) IsClosed(a ...interface{}) bool {
	argc := len(a)
	if argc == 0 {
		return p.IsClosed__SWIG_1()
	}
	if argc == 1 {
		return p.IsClosed__SWIG_0(a[0].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) ComputeRMF__SWIG_0(arg2 []float64, arg3 Vec3) (_swig_ret FrameSeq) {
	var swig_r FrameSeq
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (FrameSeq)(SwigcptrFrameSeq(C._wrap_BSpline_computeRMF__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), *(*C.swig_type_30)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrBSpline) ComputeRMF__SWIG_1(arg2 []float64) (_swig_ret FrameSeq) {
	var swig_r FrameSeq
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (FrameSeq)(SwigcptrFrameSeq(C._wrap_BSpline_computeRMF__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), *(*C.swig_type_31)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (p SwigcptrBSpline) ComputeRMF(a ...interface{}) FrameSeq {
	argc := len(a)
	if argc == 1 {
		return p.ComputeRMF__SWIG_1(a[0].([]float64))
	}
	if argc == 2 {
		return p.ComputeRMF__SWIG_0(a[0].([]float64), a[1].(Vec3))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) UniformKnotSeq__SWIG_0(arg2 int) (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_BSpline_uniformKnotSeq__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrBSpline) UniformKnotSeq__SWIG_1() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BSpline_uniformKnotSeq__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (p SwigcptrBSpline) UniformKnotSeq(a ...interface{}) []float64 {
	argc := len(a)
	if argc == 0 {
		return p.UniformKnotSeq__SWIG_1()
	}
	if argc == 1 {
		return p.UniformKnotSeq__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) ToJson() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BSpline_toJson_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrBSpline) Save(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BSpline_save_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), *(*C.swig_type_35)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrBSpline) SetControlPointVec2At(arg2 int, arg3 Vec2) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_BSpline_setControlPointVec2At_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrBSpline) SetControlPointVec3At(arg2 int, arg3 Vec3) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_BSpline_setControlPointVec3At_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrBSpline) SetControlPointVec4At(arg2 int, arg3 Vec4) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3.Swigcptr()
	C._wrap_BSpline_setControlPointVec4At_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrBSpline) SetKnotAt(arg2 int, arg3 float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_BSpline_setKnotAt_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))
}

func (arg1 SwigcptrBSpline) InsertKnot(arg2 float64, arg3 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_insertKnot_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Split(arg2 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_split_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Tension(arg2 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_tension_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBSpline) ToBeziers() (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_toBeziers_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Derive__SWIG_0(arg2 int, arg3 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_derive__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Derive__SWIG_1(arg2 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_derive__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrBSpline) Derive__SWIG_2() (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_derive__SWIG_2_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrBSpline) Derive(a ...interface{}) BSpline {
	argc := len(a)
	if argc == 0 {
		return p.Derive__SWIG_2()
	}
	if argc == 1 {
		return p.Derive__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.Derive__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) ElevateDegree__SWIG_0(arg2 int, arg3 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_elevateDegree__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrBSpline) ElevateDegree__SWIG_1(arg2 int) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_elevateDegree__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (p SwigcptrBSpline) ElevateDegree(a ...interface{}) BSpline {
	argc := len(a)
	if argc == 1 {
		return p.ElevateDegree__SWIG_1(a[0].(int))
	}
	if argc == 2 {
		return p.ElevateDegree__SWIG_0(a[0].(int), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) AlignWith__SWIG_0(arg2 BSpline, arg3 BSpline, arg4 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	_swig_i_3 := arg4
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_alignWith__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.double(_swig_i_3))))
	return swig_r
}

func (arg1 SwigcptrBSpline) AlignWith__SWIG_1(arg2 BSpline, arg3 BSpline) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_BSpline_alignWith__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func (p SwigcptrBSpline) AlignWith(a ...interface{}) BSpline {
	argc := len(a)
	if argc == 2 {
		return p.AlignWith__SWIG_1(a[0].(BSpline), a[1].(BSpline))
	}
	if argc == 3 {
		return p.AlignWith__SWIG_0(a[0].(BSpline), a[1].(BSpline), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) MorphTo__SWIG_0(arg2 BSpline, arg3 float64) (_swig_ret Morphism) {
	var swig_r Morphism
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Morphism)(SwigcptrMorphism(C._wrap_BSpline_morphTo__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func (arg1 SwigcptrBSpline) MorphTo__SWIG_1(arg2 BSpline) (_swig_ret Morphism) {
	var swig_r Morphism
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Morphism)(SwigcptrMorphism(C._wrap_BSpline_morphTo__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (p SwigcptrBSpline) MorphTo(a ...interface{}) Morphism {
	argc := len(a)
	if argc == 1 {
		return p.MorphTo__SWIG_1(a[0].(BSpline))
	}
	if argc == 2 {
		return p.MorphTo__SWIG_0(a[0].(BSpline), a[1].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrBSpline) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BSpline_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrBSpline) GetDegree() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_BSpline_degree_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBSpline) GetOrder() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_BSpline_order_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBSpline) GetDimension() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_BSpline_dimension_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBSpline) GetNumControlPoints() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_BSpline_numControlPoints_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrBSpline) GetDomain() (_swig_ret Domain) {
	var swig_r Domain
	_swig_i_0 := arg1
	swig_r = (Domain)(SwigcptrDomain(C._wrap_BSpline_domain_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrBSpline) SetControlPoints(arg2 []float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BSpline_controlPoints_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), *(*C.swig_type_37)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrBSpline) GetControlPoints() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BSpline_controlPoints_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

func (arg1 SwigcptrBSpline) SetKnots(arg2 []float64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_BSpline_knots_set_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), *(*C.swig_type_39)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrBSpline) GetKnots() (_swig_ret []float64) {
	var swig_r []float64
	_swig_i_0 := arg1
	swig_r_p := C._wrap_BSpline_knots_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*[]float64)(unsafe.Pointer(&swig_r_p))
	return swig_r
}

type BSpline interface {
	Swigcptr() uintptr
	SwigIsBSpline()
	ControlPointVec2At(arg2 int) (_swig_ret Vec2)
	ControlPointVec3At(arg2 int) (_swig_ret Vec3)
	ControlPointVec4At(arg2 int) (_swig_ret Vec4)
	KnotAt(arg2 int) (_swig_ret float64)
	Eval(arg2 float64) (_swig_ret DeBoorNet)
	EvalAll(arg2 []float64) (_swig_ret []float64)
	Sample(a ...interface{}) []float64
	Bisect(a ...interface{}) DeBoorNet
	IsClosed(a ...interface{}) bool
	ComputeRMF(a ...interface{}) FrameSeq
	UniformKnotSeq(a ...interface{}) []float64
	ToJson() (_swig_ret string)
	Save(arg2 string)
	SetControlPointVec2At(arg2 int, arg3 Vec2)
	SetControlPointVec3At(arg2 int, arg3 Vec3)
	SetControlPointVec4At(arg2 int, arg3 Vec4)
	SetKnotAt(arg2 int, arg3 float64)
	InsertKnot(arg2 float64, arg3 int) (_swig_ret BSpline)
	Split(arg2 float64) (_swig_ret BSpline)
	Tension(arg2 float64) (_swig_ret BSpline)
	ToBeziers() (_swig_ret BSpline)
	Derive(a ...interface{}) BSpline
	ElevateDegree(a ...interface{}) BSpline
	AlignWith(a ...interface{}) BSpline
	MorphTo(a ...interface{}) Morphism
	String() (_swig_ret string)
	GetDegree() (_swig_ret int)
	GetOrder() (_swig_ret int)
	GetDimension() (_swig_ret int)
	GetNumControlPoints() (_swig_ret int)
	GetDomain() (_swig_ret Domain)
	SetControlPoints(arg2 []float64)
	GetControlPoints() (_swig_ret []float64)
	SetKnots(arg2 []float64)
	GetKnots() (_swig_ret []float64)
}

type SwigcptrMorphism uintptr

func (p SwigcptrMorphism) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMorphism) SwigIsMorphism() {
}

func NewMorphism__SWIG_0(arg1 BSpline, arg2 BSpline, arg3 float64) (_swig_ret Morphism) {
	var swig_r Morphism
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Morphism)(SwigcptrMorphism(C._wrap_new_Morphism__SWIG_0_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.double(_swig_i_2))))
	return swig_r
}

func NewMorphism__SWIG_1(arg1 BSpline, arg2 BSpline) (_swig_ret Morphism) {
	var swig_r Morphism
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Morphism)(SwigcptrMorphism(C._wrap_new_Morphism__SWIG_1_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewMorphism(a ...interface{}) Morphism {
	argc := len(a)
	if argc == 2 {
		return NewMorphism__SWIG_1(a[0].(BSpline), a[1].(BSpline))
	}
	if argc == 3 {
		return NewMorphism__SWIG_0(a[0].(BSpline), a[1].(BSpline), a[2].(float64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMorphism) Eval(arg2 float64) (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_Morphism_eval_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0), C.double(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrMorphism) String() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Morphism_string_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMorphism) GetOrigin() (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_Morphism_origin_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMorphism) GetTarget() (_swig_ret BSpline) {
	var swig_r BSpline
	_swig_i_0 := arg1
	swig_r = (BSpline)(SwigcptrBSpline(C._wrap_Morphism_target_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMorphism) GetEpsilon() (_swig_ret float64) {
	var swig_r float64
	_swig_i_0 := arg1
	swig_r = (float64)(C._wrap_Morphism_epsilon_get_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteMorphism(arg1 Morphism) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_Morphism_tinyspline_beac5664a71e2f0d(C.uintptr_t(_swig_i_0))
}

type Morphism interface {
	Swigcptr() uintptr
	SwigIsMorphism()
	Eval(arg2 float64) (_swig_ret BSpline)
	String() (_swig_ret string)
	GetOrigin() (_swig_ret BSpline)
	GetTarget() (_swig_ret BSpline)
	GetEpsilon() (_swig_ret float64)
}


